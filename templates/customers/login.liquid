{{ 'section-customer.css' | asset_url | stylesheet_tag }}

<div id="login-page" class="page customer-page">
  <div class="form-message form-message--success hide" id="ResetSuccess" tabindex="-1">
    {{ 'customer.recover_password.success' | t }}
  </div>
  <h1 id="LoginHeading" class="customer-heading text-center">{{ 'customer.login.title' | t }}</h1> 
  <div id="CustomerLoginFormWrap">
    <div id="CustomerLoginForm" class="login-form form-vertical">
      {% form 'customer_login', novalidate: 'novalidate' %}

        {%- if form.errors -%}
          <div class="form-message form-message--error">
            <h2 class="h3 form-message__title " tabindex="-1" data-form-status>{{ 'contact.form.error_heading' | t }}</h2>
            {{ form.errors | default_errors }}
          </div>
        {%- endif -%}
        <div class="input-wrap">
          <label for="CustomerEmail">{{ 'customer.login.email' | t }}</label>
          <input
            type="email"
            name="customer[email]"
            id="CustomerEmail"
            autocomplete="email"
            autocorrect="off"
            autocapitalize="off"
            placeholder="E-mail"
            {%- if form.errors contains 'form' -%}
              class="input--error"
              aria-invalid="true"
            {%- endif -%}
            >
        </div>
        {% if form.password_needed %}
          <div class="input-wrap">
            <label for="CustomerPassword">{{ 'customer.login.password' | t }}</label>
            <input
              type="password"
              value=""
              name="customer[password]"
              placeholder="Password"
              id="CustomerPassword"
              {%- if form.errors contains 'form' -%}
                class="input--error"
                aria-invalid="true"
              {%- endif -%}
            >
          </div>
        {% endif %}
        <div class="text-center">
          <input type="submit" class="button-capitalized" value="LOG IN">
          {% if form.password_needed %}
            <p><a href="#recover" id="RecoverPassword">{{ 'customer.login.forgot_password' | t }}</a></p>
          {% endif %}
          <p>
            {{ 'layout.customer.create_account' | t | customer_register_link }}
          </p>
        </div>
      {% endform %}
    </div>
    <div id="RecoverPasswordForm" class="login-form form-vertical hide">
      <div class="text-center">
        <h2 id="RecoverHeading">{{ 'customer.recover_password.title' | t }}</h2>
        <p>{{ 'customer.recover_password.subtext' | t }}</p>
      </div>
        {% form 'recover_customer_password' %}
  
          {% comment %}
            Add a hidden span to indicate the form was submitted succesfully.
          {% endcomment %}
          {% if form.posted_successfully? %}
            <span class="hide reset-password-success"></span>
          {% endif %}
          <div class="input-wrap">
            <input
              type="email"
              value=""
              name="email"
              id="RecoverEmail"
              class="input-full{% if form.errors %} input--error{% endif %}"
              autocorrect="off"
              autocapitalize="off"
              placeholder="E-mail"
              {% if form.errors %}
                aria-invalid="true"
                aria-describedby="RecoverEmail-email-error"
              {%- endif -%}
              >
          </div>
          {%- if form.errors -%}
            <span id="RecoverEmail-email-error" class="input-error-message">
              {% include 'icon-error' %} {{ form.errors.messages['form'] }}
            </span>
          {%- endif -%}
  
          <div class="text-center">
            <p>
              <input type="submit" class="btn" value="{{ 'customer.recover_password.submit' | t }}">
            </p>
            <a href="#LoginHeading" id="HideRecoverPasswordLink">{{ 'customer.recover_password.cancel' | t }}</a>
          </div>
        {% endform %}
      
    </div>
  </div>


  {% comment %}
    If accounts are set as optional, the following will be shown as an option
    during checkout, not on the default /login page.
  {% endcomment %}
  {% if shop.checkout.guest_login %}
    <div class="text-center">
      <hr class="hr--invisible">
      <h2>{{ 'customer.login.guest_title' | t }}</h2>

      {% form 'guest_login' %}
        <input type="submit" class="btn" value="{{ 'customer.login.guest_continue' | t }}">
      {% endform %}
    </div>
  {% endif %}
</div>


<script>

  function initEventListeners() {
    
    document.getElementById('RecoverPassword').addEventListener(
      'click',
      function(evt) {
        evt.preventDefault();
        showRecoverPasswordForm();
        document.getElementById('RecoverHeading').getAttribute('tabindex', '-1').focus();
      }.bind(this)
    );

    // Hide reset password form
    document.getElementById('HideRecoverPasswordLink').addEventListener(
      'click',
      function(evt) {
        evt.preventDefault();
        hideRecoverPasswordForm();
        document.getElementById('LoginHeading').getAttribute('tabindex', '-1').focus();
      }.bind(this)
    );

    document.getElementById('RecoverHeading').addEventListener('blur', function() {
      $(this).removeAttr('tabindex');
    });

    document.getElementById('LoginHeading').addEventListener('blur', function() {
      $(this).removeAttr('tabindex');
    });
  }

  /**
  *
  *  Show/Hide recover password form
  *
  */

  function showRecoverPasswordForm() {
    document.getElementById('RecoverPasswordForm').classList.remove('hide');
    document.getElementById('CustomerLoginForm').classList.add('hide');

    if (document.getElementById('RecoverEmail').getAttribute('aria-invalid') === 'true') {
      document.getElementById('RecoverEmail').focus();
    }
  }

  function hideRecoverPasswordForm() {
    document.getElementById('RecoverPasswordForm').classList.add('hide');
    document.getElementById('CustomerLoginForm').classList.remove('hide');
  }

  /**
  *
  *  Show reset password success message
  *
  */
  function resetPasswordSuccess() {
    var $formState = document.querySelectorAll('.reset-password-success');

    // check if reset password form was successfully submited.
    if (!$formState.length) {
      return;
    }

    // show success message
    document.getElementById('ResetSuccess').classList.remove('hide')
    document.getElementById('ResetSuccess').focus();
  }

  /**
  *
  *  Show/hide customer address forms
  *
  */
  function customerAddressForm() {
    return
    var $newAddressForm = document.getElementById('AddressNewForm');
    var $newAddressFormButton = document.getElementById('AddressNewButton');

    if (!$newAddressForm.length) {
      return;
    }

    // Initialize observers on address selectors, defined in shopify_common.js
    if (Shopify) {
      // eslint-disable-next-line no-new
      new Shopify.CountryProvinceSelector(
        'AddressCountryNew',
        'AddressProvinceNew',
        {
          hideElement: 'AddressProvinceContainerNew'
        }
      );
    }

    // Initialize each edit form's country/province selector
    document.querySelectorAll('.address-country-option').each(function() {
      var formId = $(this).data('form-id');
      var countrySelector = 'AddressCountry_' + formId;
      var provinceSelector = 'AddressProvince_' + formId;
      var containerSelector = 'AddressProvinceContainer_' + formId;

      // eslint-disable-next-line no-new
      new Shopify.CountryProvinceSelector(countrySelector, provinceSelector, {
        hideElement: containerSelector
      });
    });

    // Toggle new/edit address forms
    document.querySelectorAll('.address-new-toggle').addEventListener('click', function() {
      var isExpanded = $newAddressFormButton.getAttribute('aria-expanded') === 'true';

      $newAddressForm.toggleClass('hide');
      $newAddressFormButton.getAttribute('aria-expanded', !isExpanded).focus();
    });

    document.querySelectorAll('.address-edit-toggle').addEventListener('click', function() {
      var formId = $(this).data('form-id');
      var $editButton = document.getElementById('EditFormButton_' + formId);
      var $editAddress = document.getElementById('EditAddress_' + formId);
      var isExpanded = $editButton.getAttribute('aria-expanded') === 'true';

      $editAddress.toggleClass('hide');
      $editButton.getAttribute('aria-expanded', !isExpanded).focus();
    });

    document.querySelectorAll('.address-delete').addEventListener('click', function() {
      var $el = $(this);
      var formId = $el.data('form-id');
      var confirmMessage = $el.data('confirm-message');

      // eslint-disable-next-line no-alert
      if (
        confirm(
          confirmMessage || 'Are you sure you wish to delete this address?'
        )
      ) {
        Shopify.postLink('/account/addresses/' + formId, {
          parameters: { _method: 'delete' }
        });
      }
    });
  }

  /**
  *
  *  Check URL for reset password hash
  *
  */
  function checkUrlHash() {
    var hash = window.location.hash;

    // Allow deep linking to recover password form
    if (hash === '#recover') {
      showRecoverPasswordForm.bind(this)();
    }
  }

  function initLogin(){
    console.log('init login')
    initEventListeners();
    checkUrlHash();
    resetPasswordSuccess();
    customerAddressForm();
  }

  document.addEventListener("DOMContentLoaded", initLogin);
  document.addEventListener("shopify:section:load", initLogin);

</script>